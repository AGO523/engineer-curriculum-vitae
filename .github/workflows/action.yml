name: deploy

on:
  push:
    branches:
      # - main
      - feature/setup-cloudrun

jobs:
  deploy:
    runs-on: ubuntu-20.04
    permissions:
      contents: "read"
      id-token: "write"
    env:
      RAILS_ENV: production
      REGION: asia-northeast1
      GOOGLE_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      DOCKER_BUILDKIT: 1
      GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
      PROJECT_NUMBER: ${{ secrets.PROJECT_NUMBER }}
      SERVICE_NAME: engineer-cv-api
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v3

      - uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GOOGLE_PROJECT_ID }}

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Authenticate using the created credentials file
        run: |-
          gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}" --project="${{ env.GOOGLE_PROJECT_ID }}"

      - name: Register gcloud as a Docker credential
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Set environment variables
        run: |
          export RAILS_DOCKER_REPOSITORY=${{ env.REGION }}-docker.pkg.dev/engineer-cv/engineer-cv-api-docker-repository
          echo "RAILS_REPOSITORY=$RAILS_DOCKER_REPOSITORY" >> $GITHUB_ENV

      - name: Build an image from a Dockerfile
        run: |
          docker pull ${RAILS_REPOSITORY}/api:latest || :
          docker build \
            --cache-from=${RAILS_REPOSITORY}/api:latest \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --build-arg RAILS_ENV=${RAILS_ENV} \
            --build-arg RAILS_MASTER_KEY=${{ secrets.RAILS_MASTER_KEY }} \
            --tag ${RAILS_REPOSITORY}/api:${GITHUB_SHA} .
          docker tag ${RAILS_REPOSITORY}/api:${GITHUB_SHA} ${RAILS_REPOSITORY}/api:latest

      - name: Run database migrations
        run: |
          docker run --rm \
            -e DATABASE_URL=${DATABASE_URL} \
            ${RAILS_REPOSITORY}/api:${GITHUB_SHA} \
            rails db:migrate

      - name: Push an image or a repository to a registry
        run: |
          docker push ${RAILS_REPOSITORY}/api:${GITHUB_SHA}
          docker push ${RAILS_REPOSITORY}/api:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${SERVICE_NAME} --image ${RAILS_REPOSITORY}/api:${GITHUB_SHA} --region ${REGION} --platform managed
